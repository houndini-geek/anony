import{initializeApp}from"https://www.gstatic.com/firebasejs/10.11.0/firebase-app.js";import{getAuth,signInAnonymously,onAuthStateChanged}from"https://www.gstatic.com/firebasejs/10.11.0/firebase-auth.js";import{getFirestore,collection,doc,getDoc,setDoc,updateDoc}from"https://www.gstatic.com/firebasejs/10.11.0/firebase-firestore.js";import{v4 as uuidv4}from"https://jspm.dev/uuid";import{ref}from"vue";const firebaseConfig={apiKey:"AIzaSyCRPxwRZezkFcsPuojLK_258hTY1s2BfKk",authDomain:"listify-5fd65.firebaseapp.com",projectId:"listify-5fd65",storageBucket:"listify-5fd65.appspot.com",messagingSenderId:"54858603391",appId:"1:54858603391:web:52d177eb7648cf684f584a",measurementId:"G-B4C45TZBWC"};initializeApp(firebaseConfig);const auth=getAuth(),db=getFirestore();async function signIn(e){const s=e.value,t=ref("");if(s)return await signInAnonymously(auth).then((()=>{createUser(s)})).catch((e=>{console.log(e.message),t.value="Failed to create Anony account "+e.message})),{mssg:t}}async function createUser(e){const s=auth.currentUser.uid,t=e;if(!t)return alert("Anony username required");if(s)try{const e=collection(db,"users"),o=doc(e,s);return(await getDoc(o)).exists()?(console.log("User already exists"),void alert("User already exists")):(await setDoc(o,{username:t,uid:s,messages:[]}),console.log("User created successfully"),alert("User created successfully"),void setTimeout((()=>{location.href="/inbox"}),2e3))}catch(e){console.log(e.message),alert("Failed to create user: "+e.message)}}async function getUserData(){return new Promise(((e,s)=>{onAuthStateChanged(auth,(async t=>{if(!t)return console.log("User does not exist"),alert("User does not exist"),s("User does not exist"),void(location.href="/session");{const o=t.uid,n=collection(db,"users"),r=doc(n,o),a=await getDoc(r);if(!a.exists())return console.log("Doc not found."),alert("Error occured while triying to retrive your data, Create a new Anony acccount"),s("Doc not found"),void(location.href="/session");{const s=a.data();e(s)}}}))}))}async function getReceiverName(e){const s=e,t=ref("");return s?new Promise(((e,o)=>{const n=collection(db,"users"),r=doc(n,s);getDoc(r).then((s=>{if(s.exists()){const o=s.data().username;t.value=o,e(t)}else o("Cannot find the user doc")}))})):alert("Anony user not found")}function getCurrentDate(){return(new Date).toLocaleDateString("en-US",{weekday:"short",month:"long",day:"numeric",hour:"numeric",minute:"numeric"})}async function sendAnonyMssg(e,s){const t=e,o=s.value;if(t&&o)return new Promise(((e,s)=>{const n=collection(db,"users"),r=doc(n,t);getDoc(r).then((t=>{if(t.exists()){const n=t.data().messages||[];n.push({message:o,id:uuidv4(),date:getCurrentDate()}),updateDoc(r,{messages:n}).then((()=>{e({success:"Your Anonymous message has been sent succesfuly"}),console.log("sent")})).catch((e=>{s(e.message),console.log(e.message)}))}else s({error:"An error occurred while sending the message"})}))}))}async function checkUser(){return new Promise((e=>{const s=ref(!1);onAuthStateChanged(auth,(t=>{t?(console.log(t),s.value=!0,e(s)):console.log("No user found")}))}))}export{signIn,createUser,getUserData,getReceiverName,sendAnonyMssg,checkUser};